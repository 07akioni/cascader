{"version":3,"sources":["webpack:///./examples/dynamic-options.js"],"names":["addressOptions","label","isLeaf","value","Demo","state","inputValue","options","onChange","selectedOptions","console","log","setState","map","o","join","loadData","targetOption","length","loading","setTimeout","children","render","Component","document","getElementById"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;gfAJA;;;AAMA,KAAMA,iBAAiB,CAAC;AACtBC,UAAO,IADe;AAEtBC,WAAQ,KAFc;AAGtBC,UAAO;AAHe,EAAD,EAIpB;AACDF,UAAO,IADN;AAEDC,WAAQ,KAFP;AAGDC,UAAO;AAHN,EAJoB,CAAvB;;KAUMC,I;;;;;;;;;;;;yJACJC,K,GAAQ;AACNC,mBAAY,EADN;AAENC,gBAASP;AAFH,M,QAKRQ,Q,GAAW,UAACL,KAAD,EAAQM,eAAR,EAA4B;AACrCC,eAAQC,GAAR,CAAYR,KAAZ,EAAmBM,eAAnB;AACA,aAAKG,QAAL,CAAc;AACZN,qBAAYG,gBAAgBI,GAAhB,CAAoB;AAAA,kBAAKC,EAAEb,KAAP;AAAA,UAApB,EAAkCc,IAAlC,CAAuC,IAAvC;AADA,QAAd;AAGD,M,QAEDC,Q,GAAW,UAACP,eAAD,EAAqB;AAC9B,WAAMQ,eAAeR,gBAAgBA,gBAAgBS,MAAhB,GAAyB,CAAzC,CAArB;AACAD,oBAAaE,OAAb,GAAuB,IAAvB;AACA;AACAC,kBAAW,YAAM;AACfH,sBAAaE,OAAb,GAAuB,KAAvB;AACAF,sBAAaI,QAAb,GAAwB,CAAC;AACvBpB,kBAAUgB,aAAahB,KAAvB,8BADuB;AAEvBE,kBAAO;AAFgB,UAAD,EAGrB;AACDF,kBAAUgB,aAAahB,KAAvB,8BADC;AAEDE,kBAAO;AAFN,UAHqB,CAAxB;AAOA,eAAKS,QAAL,CAAc;AACZL,iDAAa,MAAKF,KAAL,CAAWE,OAAxB;AADY,UAAd;AAGD,QAZD,EAYG,IAZH;AAaD,M;;;kBAEDe,M,qBAAS;AACP,YACE;AAAA;AAAA;AACE,kBAAS,KAAKjB,KAAL,CAAWE,OADtB;AAEE,mBAAU,KAAKS,QAFjB;AAGE,mBAAU,KAAKR,QAHjB;AAIE;AAJF;AAME,gDAAO,OAAO,KAAKH,KAAL,CAAWC,UAAzB,EAAqC,cAArC;AANF,MADF;AAUD,I;;;GA3CgB,gBAAMiB,S;;AA8CzB,oBAASD,MAAT,CAAgB,8BAAC,IAAD,OAAhB,EAA0BE,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"dynamic-options.js","sourcesContent":["/* eslint-disable no-console */\nimport 'rc-cascader/assets/index.less';\nimport Cascader from 'rc-cascader';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst addressOptions = [{\n  label: '福建',\n  isLeaf: false,\n  value: 'fj',\n}, {\n  label: '浙江',\n  isLeaf: false,\n  value: 'zj',\n}];\n\nclass Demo extends React.Component {\n  state = {\n    inputValue: '',\n    options: addressOptions,\n  }\n\n  onChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    this.setState({\n      inputValue: selectedOptions.map(o => o.label).join(', '),\n    });\n  }\n\n  loadData = (selectedOptions) => {\n    const targetOption = selectedOptions[selectedOptions.length - 1];\n    targetOption.loading = true;\n    // 动态加载下级数据\n    setTimeout(() => {\n      targetOption.loading = false;\n      targetOption.children = [{\n        label: `${targetOption.label}动态加载1`,\n        value: 'dynamic1',\n      }, {\n        label: `${targetOption.label}动态加载2`,\n        value: 'dynamic2',\n      }];\n      this.setState({\n        options: [...this.state.options],\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <Cascader\n        options={this.state.options}\n        loadData={this.loadData}\n        onChange={this.onChange}\n        changeOnSelect\n      >\n        <input value={this.state.inputValue} readOnly />\n      </Cascader>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/dynamic-options.js"],"sourceRoot":""}